<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://royalbluec.github.io/</id><title>RoyalBlueC</title><subtitle>royalbluec blog</subtitle> <updated>2022-06-02T17:18:05+09:00</updated> <author> <name>your_full_name</name> <uri>https://royalbluec.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://royalbluec.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://royalbluec.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 your_full_name </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Redux Toolkit Quick Start</title><link href="https://royalbluec.github.io/posts/redux-toolkit-quick-start/" rel="alternate" type="text/html" title="Redux Toolkit Quick Start" /><published>2022-05-23T23:00:00+09:00</published> <updated>2022-05-23T23:00:00+09:00</updated> <id>https://royalbluec.github.io/posts/redux-toolkit-quick-start/</id> <content src="https://royalbluec.github.io/posts/redux-toolkit-quick-start/" /> <author> <name>royalblueC</name> </author> <category term="Frontend" /> <summary> Redux Toolkit Quick Start Usage Summary​ Install Redux Toolkit and React-Redux Add the Redux Toolkit and React-Redux packages to your project npm install @reduxjs/toolkit react-redux Create a Redux Store Create a file named src/app/store.js. Import the configureStore API from Redux Toolkit. We’ll start by creating an empty Redux store, and exporting it: // app/store.js import { configur... </summary> </entry> <entry><title>Thinking In Redux</title><link href="https://royalbluec.github.io/posts/thinking-in-redux/" rel="alternate" type="text/html" title="Thinking In Redux" /><published>2022-05-21T23:00:00+09:00</published> <updated>2022-05-21T23:00:00+09:00</updated> <id>https://royalbluec.github.io/posts/thinking-in-redux/</id> <content src="https://royalbluec.github.io/posts/thinking-in-redux/" /> <author> <name>royalblueC</name> </author> <category term="Frontend" /> <summary> Three Principles Single source of truth The global state of your application is stored in an object tree within a single store State is read-only The only way to change the state is to emit an action, an object describing what happe Changes are made with pure functions To specify how the state tree is transformed by actions, you write pure reducers. Glossary Action An action is a plain... </summary> </entry> <entry><title>Redux Essentials</title><link href="https://royalbluec.github.io/posts/redux-essentials/" rel="alternate" type="text/html" title="Redux Essentials" /><published>2022-05-19T23:00:00+09:00</published> <updated>2022-05-19T23:00:00+09:00</updated> <id>https://royalbluec.github.io/posts/redux-essentials/</id> <content src="https://royalbluec.github.io/posts/redux-essentials/" /> <author> <name>royalblueC</name> </author> <category term="Frontend" /> <summary> Redux Overview and Concepts What is Redux? Redux is pattern and library for managing and updating application state, using events called “actions”. It serves as a centralized store for state that needs to be used across your entire application, with rules ensuring that the state can only be updated in a predictable fashion. Why Should I Use Redux? Redux helps you manage “global” state - sta... </summary> </entry> </feed>
